name: Build and deploy dotnet framework app to an Azure WebJob in an Azure App Service

on:
  push:
    branches:
      - main # This will run when pushes are made to our main branch 
  workflow_dispatch:

env:
  # Relative path to our solution file in the repository
  SOLUTION_LOCATION: './AzureWebJobsCICD/AzureWebJobsCICD.sln' 
  # Relative path to our csproj file that defines our WebJob
  WEBJOB_PROJECT_PATHS: |
        AzureWebJobsCICD/AzureWebJobsCICD/AzureWebJobsCICD.csproj
        AzureWebJobsCICD/AzureWebJobsCICD_2/AzureWebJobsCICD_2.csproj
        
  # This is the path we want our compiled application to be output to
  WEBJOB_OUTPUT: '/myapp/App_Data/Jobs/Triggered/'
  # Set this to the dotnet version to use
  DOTNET_VERSION: '4.8.x'
  # Set this to debug or release versions  
  CONFIGURATION: Release
  # The name of our Application we're deploying - this is the name of our App Service in Azure
  APPLICATION_NAME: 'WebJobsCICDSite'  
      
# Defines our jobs. Here we have two: build and deploy
jobs:
  build:
    # Specify a fixed Windows version to avoid breaking changes with future updates
    runs-on: windows-2019

    # The steps of our build job
    steps:
      - uses: actions/checkout@v4 # Checkout the code from the repo

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2

      - name: Restore NuGet packages
        run: nuget restore ${{ env.SOLUTION_LOCATION }}

      - name: Build with MSBuild
        # Adding detailed logging by using verbosity settings
        run: msbuild ${{ env.SOLUTION_LOCATION }} /p:Configuration=${{ env.CONFIGURATION }} /v:detailed

      - name: Show Current Directory
        run: pwd

      - name: List Directory Contents
        run: dir

      - name: Build and Deploy loop over web jobs
        run: |
          $webjobPaths = "${{ env.WEBJOB_PROJECT_PATHS }}".Split("`n")
                   
          foreach ($path in $webjobPaths) {           
            $path = $path.Trim()  # Remove any leading or trailing spaces
            
            # Check if the path is not empty or only whitespace
            if (-not [string]::IsNullOrWhiteSpace($path)) {
              Write-Output "Building and deploying web job: $path"       

              # Verify the current directory content
              Write-Output "Current directory content before building:"
              Get-ChildItem -Path (Split-Path $path -Parent) | Format-List
              
              # Extract the project name from the path and get the desired substring
              $projectName = Split-Path $path -LeafBase
              $substringIndex = $projectName.LastIndexOf('.') + 1
              $jobName = $projectName 
              # .Substring($substringIndex)
      
              Write-Output "Extracted job name: $jobName"
              Write-Output "path: $path"
      
              msbuild $path /p:Configuration=${{ env.CONFIGURATION }} /p:OutputPath="${{ env.DOTNET_ROOT }}${{ env.WEBJOB_OUTPUT }}\$jobName" /verbosity:detailed /t:Publish
            } else {
              Write-Output "Skipped empty or whitespace path."
            }
          }     

      # Uses the upload-artifact@v4 Action to upload the output of 
      # that publish step to a temporary directory 
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{ env.DOTNET_ROOT }}/myapp/

  deploy:
    # Specify a fixed Windows version to avoid breaking changes with future updates
    runs-on: windows-2019
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_172309902F204C838307883FFF90678E }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_2A088B4292524442885AFA9DDEDCD648 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_25D59072EF704AE7BBEAAC2BA3C1D4EB }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.APPLICATION_NAME }}
          slot-name: 'Production'
          package: .
